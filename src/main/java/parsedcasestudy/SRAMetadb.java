package parsedcasestudy;

import org.schemaanalyst.sqlrepresentation.Schema;
import org.schemaanalyst.sqlrepresentation.Table;
import org.schemaanalyst.sqlrepresentation.datatype.IntDataType;
import org.schemaanalyst.sqlrepresentation.datatype.RealDataType;
import org.schemaanalyst.sqlrepresentation.datatype.TextDataType;
import org.schemaanalyst.sqlrepresentation.datatype.VarCharDataType;

/*
 * SRAMetadb schema.
 * Java code originally generated: 2013/12/13 10:00:55
 *
 */

@SuppressWarnings("serial")
public class SRAMetadb extends Schema {

	public SRAMetadb() {
		super("SRAMetadb");

		Table tableColDesc = this.createTable("col_desc");
		tableColDesc.createColumn("col_desc_ID", new RealDataType());
		tableColDesc.createColumn("table_name", new TextDataType());
		tableColDesc.createColumn("field_name", new TextDataType());
		tableColDesc.createColumn("type", new TextDataType());
		tableColDesc.createColumn("description", new TextDataType());
		tableColDesc.createColumn("value_list", new TextDataType());
		tableColDesc.createColumn("sradb_updated", new TextDataType());

		Table tableExperiment = this.createTable("experiment");
		tableExperiment.createColumn("experiment_ID", new RealDataType());
		tableExperiment.createColumn("bamFile", new TextDataType());
		tableExperiment.createColumn("fastqFTP", new TextDataType());
		tableExperiment.createColumn("experiment_alias", new TextDataType());
		tableExperiment.createColumn("experiment_accession", new TextDataType());
		tableExperiment.createColumn("broker_name", new TextDataType());
		tableExperiment.createColumn("center_name", new TextDataType());
		tableExperiment.createColumn("title", new TextDataType());
		tableExperiment.createColumn("study_name", new TextDataType());
		tableExperiment.createColumn("study_accession", new TextDataType());
		tableExperiment.createColumn("design_description", new TextDataType());
		tableExperiment.createColumn("sample_name", new TextDataType());
		tableExperiment.createColumn("sample_accession", new TextDataType());
		tableExperiment.createColumn("sample_member", new TextDataType());
		tableExperiment.createColumn("library_name", new TextDataType());
		tableExperiment.createColumn("library_strategy", new TextDataType());
		tableExperiment.createColumn("library_source", new TextDataType());
		tableExperiment.createColumn("library_selection", new TextDataType());
		tableExperiment.createColumn("library_layout", new TextDataType());
		tableExperiment.createColumn("targeted_loci", new TextDataType());
		tableExperiment.createColumn("library_construction_protocol", new TextDataType());
		tableExperiment.createColumn("spot_length", new IntDataType());
		tableExperiment.createColumn("adapter_spec", new TextDataType());
		tableExperiment.createColumn("read_spec", new TextDataType());
		tableExperiment.createColumn("platform", new TextDataType());
		tableExperiment.createColumn("instrument_model", new TextDataType());
		tableExperiment.createColumn("platform_parameters", new TextDataType());
		tableExperiment.createColumn("sequence_space", new TextDataType());
		tableExperiment.createColumn("base_caller", new TextDataType());
		tableExperiment.createColumn("quality_scorer", new TextDataType());
		tableExperiment.createColumn("number_of_levels", new IntDataType());
		tableExperiment.createColumn("multiplier", new TextDataType());
		tableExperiment.createColumn("qtype", new TextDataType());
		tableExperiment.createColumn("sra_link", new TextDataType());
		tableExperiment.createColumn("experiment_url_link", new TextDataType());
		tableExperiment.createColumn("xref_link", new TextDataType());
		tableExperiment.createColumn("experiment_entrez_link", new TextDataType());
		tableExperiment.createColumn("ddbj_link", new TextDataType());
		tableExperiment.createColumn("ena_link", new TextDataType());
		tableExperiment.createColumn("experiment_attribute", new TextDataType());
		tableExperiment.createColumn("submission_accession", new TextDataType());
		tableExperiment.createColumn("sradb_updated", new TextDataType());

		Table tableMetainfo = this.createTable("metaInfo");
		tableMetainfo.createColumn("name", new VarCharDataType(50));
		tableMetainfo.createColumn("value", new VarCharDataType(50));

		Table tableRun = this.createTable("run");
		tableRun.createColumn("run_ID", new RealDataType());
		tableRun.createColumn("bamFile", new TextDataType());
		tableRun.createColumn("run_alias", new TextDataType());
		tableRun.createColumn("run_accession", new TextDataType());
		tableRun.createColumn("broker_name", new TextDataType());
		tableRun.createColumn("instrument_name", new TextDataType());
		tableRun.createColumn("run_date", new TextDataType());
		tableRun.createColumn("run_file", new TextDataType());
		tableRun.createColumn("run_center", new TextDataType());
		tableRun.createColumn("total_data_blocks", new IntDataType());
		tableRun.createColumn("experiment_accession", new TextDataType());
		tableRun.createColumn("experiment_name", new TextDataType());
		tableRun.createColumn("sra_link", new TextDataType());
		tableRun.createColumn("run_url_link", new TextDataType());
		tableRun.createColumn("xref_link", new TextDataType());
		tableRun.createColumn("run_entrez_link", new TextDataType());
		tableRun.createColumn("ddbj_link", new TextDataType());
		tableRun.createColumn("ena_link", new TextDataType());
		tableRun.createColumn("run_attribute", new TextDataType());
		tableRun.createColumn("submission_accession", new TextDataType());
		tableRun.createColumn("sradb_updated", new TextDataType());

		Table tableSample = this.createTable("sample");
		tableSample.createColumn("sample_ID", new RealDataType());
		tableSample.createColumn("sample_alias", new TextDataType());
		tableSample.createColumn("sample_accession", new TextDataType());
		tableSample.createColumn("broker_name", new TextDataType());
		tableSample.createColumn("center_name", new TextDataType());
		tableSample.createColumn("taxon_id", new IntDataType());
		tableSample.createColumn("scientific_name", new TextDataType());
		tableSample.createColumn("common_name", new TextDataType());
		tableSample.createColumn("anonymized_name", new TextDataType());
		tableSample.createColumn("individual_name", new TextDataType());
		tableSample.createColumn("description", new TextDataType());
		tableSample.createColumn("sra_link", new TextDataType());
		tableSample.createColumn("sample_url_link", new TextDataType());
		tableSample.createColumn("xref_link", new TextDataType());
		tableSample.createColumn("sample_entrez_link", new TextDataType());
		tableSample.createColumn("ddbj_link", new TextDataType());
		tableSample.createColumn("ena_link", new TextDataType());
		tableSample.createColumn("sample_attribute", new TextDataType());
		tableSample.createColumn("submission_accession", new TextDataType());
		tableSample.createColumn("sradb_updated", new TextDataType());

		Table tableSra = this.createTable("sra");
		tableSra.createColumn("sra_ID", new RealDataType());
		tableSra.createColumn("SRR_bamFile", new TextDataType());
		tableSra.createColumn("SRX_bamFile", new TextDataType());
		tableSra.createColumn("SRX_fastqFTP", new TextDataType());
		tableSra.createColumn("run_ID", new RealDataType());
		tableSra.createColumn("run_alias", new TextDataType());
		tableSra.createColumn("run_accession", new TextDataType());
		tableSra.createColumn("run_date", new TextDataType());
		tableSra.createColumn("updated_date", new TextDataType());
		tableSra.createColumn("spots", new IntDataType());
		tableSra.createColumn("bases", new IntDataType());
		tableSra.createColumn("run_center", new TextDataType());
		tableSra.createColumn("experiment_name", new TextDataType());
		tableSra.createColumn("run_url_link", new TextDataType());
		tableSra.createColumn("run_entrez_link", new TextDataType());
		tableSra.createColumn("run_attribute", new TextDataType());
		tableSra.createColumn("experiment_ID", new RealDataType());
		tableSra.createColumn("experiment_alias", new TextDataType());
		tableSra.createColumn("experiment_accession", new TextDataType());
		tableSra.createColumn("experiment_title", new TextDataType());
		tableSra.createColumn("study_name", new TextDataType());
		tableSra.createColumn("sample_name", new TextDataType());
		tableSra.createColumn("design_description", new TextDataType());
		tableSra.createColumn("library_name", new TextDataType());
		tableSra.createColumn("library_strategy", new TextDataType());
		tableSra.createColumn("library_source", new TextDataType());
		tableSra.createColumn("library_selection", new TextDataType());
		tableSra.createColumn("library_layout", new TextDataType());
		tableSra.createColumn("library_construction_protocol", new TextDataType());
		tableSra.createColumn("adapter_spec", new TextDataType());
		tableSra.createColumn("read_spec", new TextDataType());
		tableSra.createColumn("platform", new TextDataType());
		tableSra.createColumn("instrument_model", new TextDataType());
		tableSra.createColumn("instrument_name", new TextDataType());
		tableSra.createColumn("platform_parameters", new TextDataType());
		tableSra.createColumn("sequence_space", new TextDataType());
		tableSra.createColumn("base_caller", new TextDataType());
		tableSra.createColumn("quality_scorer", new TextDataType());
		tableSra.createColumn("number_of_levels", new IntDataType());
		tableSra.createColumn("multiplier", new TextDataType());
		tableSra.createColumn("qtype", new TextDataType());
		tableSra.createColumn("experiment_url_link", new TextDataType());
		tableSra.createColumn("experiment_entrez_link", new TextDataType());
		tableSra.createColumn("experiment_attribute", new TextDataType());
		tableSra.createColumn("sample_ID", new RealDataType());
		tableSra.createColumn("sample_alias", new TextDataType());
		tableSra.createColumn("sample_accession", new TextDataType());
		tableSra.createColumn("taxon_id", new IntDataType());
		tableSra.createColumn("common_name", new TextDataType());
		tableSra.createColumn("anonymized_name", new TextDataType());
		tableSra.createColumn("individual_name", new TextDataType());
		tableSra.createColumn("description", new TextDataType());
		tableSra.createColumn("sample_url_link", new TextDataType());
		tableSra.createColumn("sample_entrez_link", new TextDataType());
		tableSra.createColumn("sample_attribute", new TextDataType());
		tableSra.createColumn("study_ID", new RealDataType());
		tableSra.createColumn("study_alias", new TextDataType());
		tableSra.createColumn("study_accession", new TextDataType());
		tableSra.createColumn("study_title", new TextDataType());
		tableSra.createColumn("study_type", new TextDataType());
		tableSra.createColumn("study_abstract", new TextDataType());
		tableSra.createColumn("center_project_name", new TextDataType());
		tableSra.createColumn("study_description", new TextDataType());
		tableSra.createColumn("study_url_link", new TextDataType());
		tableSra.createColumn("study_entrez_link", new TextDataType());
		tableSra.createColumn("study_attribute", new TextDataType());
		tableSra.createColumn("related_studies", new TextDataType());
		tableSra.createColumn("primary_study", new TextDataType());
		tableSra.createColumn("submission_ID", new RealDataType());
		tableSra.createColumn("submission_accession", new TextDataType());
		tableSra.createColumn("submission_comment", new TextDataType());
		tableSra.createColumn("submission_center", new TextDataType());
		tableSra.createColumn("submission_lab", new TextDataType());
		tableSra.createColumn("submission_date", new TextDataType());
		tableSra.createColumn("sradb_updated", new TextDataType());

		Table tableSraFtContent = this.createTable("sra_ft_content");
		tableSraFtContent.createColumn("docid", new IntDataType());
		tableSraFtContent.createColumn("c0SRR_bamFile", new TextDataType());
		tableSraFtContent.createColumn("c1SRX_bamFile", new TextDataType());
		tableSraFtContent.createColumn("c2SRX_fastqFTP", new TextDataType());
		tableSraFtContent.createColumn("c3run_ID", new TextDataType());
		tableSraFtContent.createColumn("c4run_alias", new TextDataType());
		tableSraFtContent.createColumn("c5run_accession", new TextDataType());
		tableSraFtContent.createColumn("c6run_date", new TextDataType());
		tableSraFtContent.createColumn("c7updated_date", new TextDataType());
		tableSraFtContent.createColumn("c8spots", new TextDataType());
		tableSraFtContent.createColumn("c9bases", new TextDataType());
		tableSraFtContent.createColumn("c10run_center", new TextDataType());
		tableSraFtContent.createColumn("c11experiment_name", new TextDataType());
		tableSraFtContent.createColumn("c12run_url_link", new TextDataType());
		tableSraFtContent.createColumn("c13run_entrez_link", new TextDataType());
		tableSraFtContent.createColumn("c14run_attribute", new TextDataType());
		tableSraFtContent.createColumn("c15experiment_ID", new TextDataType());
		tableSraFtContent.createColumn("c16experiment_alias", new TextDataType());
		tableSraFtContent.createColumn("c17experiment_accession", new TextDataType());
		tableSraFtContent.createColumn("c18experiment_title", new TextDataType());
		tableSraFtContent.createColumn("c19study_name", new TextDataType());
		tableSraFtContent.createColumn("c20sample_name", new TextDataType());
		tableSraFtContent.createColumn("c21design_description", new TextDataType());
		tableSraFtContent.createColumn("c22library_name", new TextDataType());
		tableSraFtContent.createColumn("c23library_strategy", new TextDataType());
		tableSraFtContent.createColumn("c24library_source", new TextDataType());
		tableSraFtContent.createColumn("c25library_selection", new TextDataType());
		tableSraFtContent.createColumn("c26library_layout", new TextDataType());
		tableSraFtContent.createColumn("c27library_construction_protocol", new TextDataType());
		tableSraFtContent.createColumn("c28adapter_spec", new TextDataType());
		tableSraFtContent.createColumn("c29read_spec", new TextDataType());
		tableSraFtContent.createColumn("c30platform", new TextDataType());
		tableSraFtContent.createColumn("c31instrument_model", new TextDataType());
		tableSraFtContent.createColumn("c32instrument_name", new TextDataType());
		tableSraFtContent.createColumn("c33platform_parameters", new TextDataType());
		tableSraFtContent.createColumn("c34sequence_space", new TextDataType());
		tableSraFtContent.createColumn("c35base_caller", new TextDataType());
		tableSraFtContent.createColumn("c36quality_scorer", new TextDataType());
		tableSraFtContent.createColumn("c37number_of_levels", new TextDataType());
		tableSraFtContent.createColumn("c38multiplier", new TextDataType());
		tableSraFtContent.createColumn("c39qtype", new TextDataType());
		tableSraFtContent.createColumn("c40experiment_url_link", new TextDataType());
		tableSraFtContent.createColumn("c41experiment_entrez_link", new TextDataType());
		tableSraFtContent.createColumn("c42experiment_attribute", new TextDataType());
		tableSraFtContent.createColumn("c43sample_ID", new TextDataType());
		tableSraFtContent.createColumn("c44sample_alias", new TextDataType());
		tableSraFtContent.createColumn("c45sample_accession", new TextDataType());
		tableSraFtContent.createColumn("c46taxon_id", new TextDataType());
		tableSraFtContent.createColumn("c47common_name", new TextDataType());
		tableSraFtContent.createColumn("c48anonymized_name", new TextDataType());
		tableSraFtContent.createColumn("c49individual_name", new TextDataType());
		tableSraFtContent.createColumn("c50description", new TextDataType());
		tableSraFtContent.createColumn("c51sample_url_link", new TextDataType());
		tableSraFtContent.createColumn("c52sample_entrez_link", new TextDataType());
		tableSraFtContent.createColumn("c53sample_attribute", new TextDataType());
		tableSraFtContent.createColumn("c54study_ID", new TextDataType());
		tableSraFtContent.createColumn("c55study_alias", new TextDataType());
		tableSraFtContent.createColumn("c56study_accession", new TextDataType());
		tableSraFtContent.createColumn("c57study_title", new TextDataType());
		tableSraFtContent.createColumn("c58study_type", new TextDataType());
		tableSraFtContent.createColumn("c59study_abstract", new TextDataType());
		tableSraFtContent.createColumn("c60center_project_name", new TextDataType());
		tableSraFtContent.createColumn("c61study_description", new TextDataType());
		tableSraFtContent.createColumn("c62study_url_link", new TextDataType());
		tableSraFtContent.createColumn("c63study_entrez_link", new TextDataType());
		tableSraFtContent.createColumn("c64study_attribute", new TextDataType());
		tableSraFtContent.createColumn("c65related_studies", new TextDataType());
		tableSraFtContent.createColumn("c66primary_study", new TextDataType());
		tableSraFtContent.createColumn("c67submission_ID", new TextDataType());
		tableSraFtContent.createColumn("c68submission_accession", new TextDataType());
		tableSraFtContent.createColumn("c69submission_comment", new TextDataType());
		tableSraFtContent.createColumn("c70submission_center", new TextDataType());
		tableSraFtContent.createColumn("c71submission_lab", new TextDataType());
		tableSraFtContent.createColumn("c72submission_date", new TextDataType());
		tableSraFtContent.createColumn("c73sradb_updated", new TextDataType());
		this.createPrimaryKeyConstraint("null", tableSraFtContent, tableSraFtContent.getColumn("docid"));

		Table tableSraFtSegdir = this.createTable("sra_ft_segdir");
		tableSraFtSegdir.createColumn("level", new IntDataType());
		tableSraFtSegdir.createColumn("idx", new IntDataType());
		tableSraFtSegdir.createColumn("start_block", new IntDataType());
		tableSraFtSegdir.createColumn("leaves_end_block", new IntDataType());
		tableSraFtSegdir.createColumn("end_block", new IntDataType());
		tableSraFtSegdir.createColumn("root", new TextDataType());
		this.createPrimaryKeyConstraint("null", tableSraFtSegdir, tableSraFtSegdir.getColumn("level"), tableSraFtSegdir.getColumn("idx"));

		Table tableSraFtSegments = this.createTable("sra_ft_segments");
		tableSraFtSegments.createColumn("blockid", new IntDataType());
		tableSraFtSegments.createColumn("block", new TextDataType());
		this.createPrimaryKeyConstraint("null", tableSraFtSegments, tableSraFtSegments.getColumn("blockid"));

		Table tableStudy = this.createTable("study");
		tableStudy.createColumn("study_ID", new RealDataType());
		tableStudy.createColumn("study_alias", new TextDataType());
		tableStudy.createColumn("study_accession", new TextDataType());
		tableStudy.createColumn("study_title", new TextDataType());
		tableStudy.createColumn("study_type", new TextDataType());
		tableStudy.createColumn("study_abstract", new TextDataType());
		tableStudy.createColumn("broker_name", new TextDataType());
		tableStudy.createColumn("center_name", new TextDataType());
		tableStudy.createColumn("center_project_name", new TextDataType());
		tableStudy.createColumn("study_description", new TextDataType());
		tableStudy.createColumn("related_studies", new TextDataType());
		tableStudy.createColumn("primary_study", new TextDataType());
		tableStudy.createColumn("sra_link", new TextDataType());
		tableStudy.createColumn("study_url_link", new TextDataType());
		tableStudy.createColumn("xref_link", new TextDataType());
		tableStudy.createColumn("study_entrez_link", new TextDataType());
		tableStudy.createColumn("ddbj_link", new TextDataType());
		tableStudy.createColumn("ena_link", new TextDataType());
		tableStudy.createColumn("study_attribute", new TextDataType());
		tableStudy.createColumn("submission_accession", new TextDataType());
		tableStudy.createColumn("sradb_updated", new TextDataType());

		Table tableSubmission = this.createTable("submission");
		tableSubmission.createColumn("submission_ID", new RealDataType());
		tableSubmission.createColumn("submission_alias", new TextDataType());
		tableSubmission.createColumn("submission_accession", new TextDataType());
		tableSubmission.createColumn("submission_comment", new TextDataType());
		tableSubmission.createColumn("files", new TextDataType());
		tableSubmission.createColumn("broker_name", new TextDataType());
		tableSubmission.createColumn("center_name", new TextDataType());
		tableSubmission.createColumn("lab_name", new TextDataType());
		tableSubmission.createColumn("submission_date", new TextDataType());
		tableSubmission.createColumn("sra_link", new TextDataType());
		tableSubmission.createColumn("submission_url_link", new TextDataType());
		tableSubmission.createColumn("xref_link", new TextDataType());
		tableSubmission.createColumn("submission_entrez_link", new TextDataType());
		tableSubmission.createColumn("ddbj_link", new TextDataType());
		tableSubmission.createColumn("ena_link", new TextDataType());
		tableSubmission.createColumn("submission_attribute", new TextDataType());
		tableSubmission.createColumn("sradb_updated", new TextDataType());
	}
}

