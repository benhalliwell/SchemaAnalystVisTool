package parsedcasestudy;

import org.schemaanalyst.sqlrepresentation.Schema;
import org.schemaanalyst.sqlrepresentation.Table;
import org.schemaanalyst.sqlrepresentation.datatype.DateTimeDataType;
import org.schemaanalyst.sqlrepresentation.datatype.IntDataType;
import org.schemaanalyst.sqlrepresentation.datatype.RealDataType;
import org.schemaanalyst.sqlrepresentation.datatype.TextDataType;

/*
 * HydatRepaired schema.
 * Java code originally generated: 2013/12/13 10:00:50
 *
 */

@SuppressWarnings("serial")
public class HydatRepaired extends Schema {

	public HydatRepaired() {
		super("HydatRepaired");

		Table tableAgencyList = this.createTable("AGENCY_LIST");
		tableAgencyList.createColumn("AGENCY_ID", new IntDataType());
		tableAgencyList.createColumn("AGENCY_EN", new TextDataType());
		tableAgencyList.createColumn("AGENCY_FR", new TextDataType());
		this.createUniqueConstraint("AGENCY_LIST_PrimaryKey", tableAgencyList, tableAgencyList.getColumn("AGENCY_ID"));

		Table tableAnnualInstantPeaks = this.createTable("ANNUAL_INSTANT_PEAKS");
		tableAnnualInstantPeaks.createColumn("STATION_NUMBER", new TextDataType());
		tableAnnualInstantPeaks.createColumn("DATA_TYPE", new TextDataType());
		tableAnnualInstantPeaks.createColumn("YEAR", new IntDataType());
		tableAnnualInstantPeaks.createColumn("PEAK_CODE", new TextDataType());
		tableAnnualInstantPeaks.createColumn("PRECISION_CODE", new IntDataType());
		tableAnnualInstantPeaks.createColumn("MONTH", new IntDataType());
		tableAnnualInstantPeaks.createColumn("DAY", new IntDataType());
		tableAnnualInstantPeaks.createColumn("HOUR", new IntDataType());
		tableAnnualInstantPeaks.createColumn("MINUTE", new IntDataType());
		tableAnnualInstantPeaks.createColumn("TIME_ZONE", new TextDataType());
		tableAnnualInstantPeaks.createColumn("PEAK", new RealDataType());
		tableAnnualInstantPeaks.createColumn("SYMBOL", new TextDataType());
		this.createUniqueConstraint("ANNUAL_INSTANT_PEAKS___uniqueindex", tableAnnualInstantPeaks, tableAnnualInstantPeaks.getColumn("STATION_NUMBER"), tableAnnualInstantPeaks.getColumn("DATA_TYPE"), tableAnnualInstantPeaks.getColumn("YEAR"), tableAnnualInstantPeaks.getColumn("PEAK_CODE"));

		Table tableAnnualStatistics = this.createTable("ANNUAL_STATISTICS");
		tableAnnualStatistics.createColumn("STATION_NUMBER", new TextDataType());
		tableAnnualStatistics.createColumn("DATA_TYPE", new TextDataType());
		tableAnnualStatistics.createColumn("YEAR", new IntDataType());
		tableAnnualStatistics.createColumn("MEAN", new RealDataType());
		tableAnnualStatistics.createColumn("MIN_MONTH", new IntDataType());
		tableAnnualStatistics.createColumn("MIN_DAY", new IntDataType());
		tableAnnualStatistics.createColumn("MIN", new RealDataType());
		tableAnnualStatistics.createColumn("MIN_SYMBOL", new TextDataType());
		tableAnnualStatistics.createColumn("MAX_MONTH", new IntDataType());
		tableAnnualStatistics.createColumn("MAX_DAY", new IntDataType());
		tableAnnualStatistics.createColumn("MAX", new RealDataType());
		tableAnnualStatistics.createColumn("MAX_SYMBOL", new TextDataType());
		this.createUniqueConstraint("ANNUAL_STATISTICS_PrimaryKey", tableAnnualStatistics, tableAnnualStatistics.getColumn("STATION_NUMBER"), tableAnnualStatistics.getColumn("DATA_TYPE"), tableAnnualStatistics.getColumn("YEAR"));

		Table tableConcentrationSymbols = this.createTable("CONCENTRATION_SYMBOLS");
		tableConcentrationSymbols.createColumn("CONCENTRATION_SYMBOL", new TextDataType());
		tableConcentrationSymbols.createColumn("CONCENTRATION_EN", new TextDataType());
		tableConcentrationSymbols.createColumn("CONCENTRATION_FR", new TextDataType());
		this.createUniqueConstraint("CONCENTRATION_SYMBOLS_PrimaryKey", tableConcentrationSymbols, tableConcentrationSymbols.getColumn("CONCENTRATION_SYMBOL"));

		Table tableDataSymbols = this.createTable("DATA_SYMBOLS");
		tableDataSymbols.createColumn("SYMBOL_ID", new TextDataType());
		tableDataSymbols.createColumn("SYMBOL_EN", new TextDataType());
		tableDataSymbols.createColumn("SYMBOL_FR", new TextDataType());
		this.createUniqueConstraint("DATA_SYMBOLS_PrimaryKey", tableDataSymbols, tableDataSymbols.getColumn("SYMBOL_ID"));

		Table tableDataTypes = this.createTable("DATA_TYPES");
		tableDataTypes.createColumn("DATA_TYPE", new TextDataType());
		tableDataTypes.createColumn("DATA_TYPE_EN", new TextDataType());
		tableDataTypes.createColumn("DATA_TYPE_FR", new TextDataType());
		this.createUniqueConstraint("DATA_TYPES_PrimaryKey", tableDataTypes, tableDataTypes.getColumn("DATA_TYPE"));

		Table tableDatumList = this.createTable("DATUM_LIST");
		tableDatumList.createColumn("DATUM_ID", new IntDataType());
		tableDatumList.createColumn("DATUM_EN", new TextDataType());
		tableDatumList.createColumn("DATUM_FR", new TextDataType());
		this.createUniqueConstraint("DATUM_LIST_PrimaryKey", tableDatumList, tableDatumList.getColumn("DATUM_ID"));

		Table tableDlyFlows = this.createTable("DLY_FLOWS");
		tableDlyFlows.createColumn("STATION_NUMBER", new TextDataType());
		tableDlyFlows.createColumn("YEAR", new IntDataType());
		tableDlyFlows.createColumn("MONTH", new IntDataType());
		tableDlyFlows.createColumn("FULL_MONTH", new IntDataType());
		tableDlyFlows.createColumn("NO_DAYS", new IntDataType());
		tableDlyFlows.createColumn("MONTHLY_MEAN", new RealDataType());
		tableDlyFlows.createColumn("MONTHLY_TOTAL", new RealDataType());
		tableDlyFlows.createColumn("FIRST_DAY_MIN", new IntDataType());
		tableDlyFlows.createColumn("MIN", new RealDataType());
		tableDlyFlows.createColumn("FIRST_DAY_MAX", new IntDataType());
		tableDlyFlows.createColumn("MAX", new RealDataType());
		tableDlyFlows.createColumn("FLOW1", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL1", new TextDataType());
		tableDlyFlows.createColumn("FLOW2", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL2", new TextDataType());
		tableDlyFlows.createColumn("FLOW3", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL3", new TextDataType());
		tableDlyFlows.createColumn("FLOW4", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL4", new TextDataType());
		tableDlyFlows.createColumn("FLOW5", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL5", new TextDataType());
		tableDlyFlows.createColumn("FLOW6", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL6", new TextDataType());
		tableDlyFlows.createColumn("FLOW7", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL7", new TextDataType());
		tableDlyFlows.createColumn("FLOW8", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL8", new TextDataType());
		tableDlyFlows.createColumn("FLOW9", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL9", new TextDataType());
		tableDlyFlows.createColumn("FLOW10", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL10", new TextDataType());
		tableDlyFlows.createColumn("FLOW11", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL11", new TextDataType());
		tableDlyFlows.createColumn("FLOW12", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL12", new TextDataType());
		tableDlyFlows.createColumn("FLOW13", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL13", new TextDataType());
		tableDlyFlows.createColumn("FLOW14", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL14", new TextDataType());
		tableDlyFlows.createColumn("FLOW15", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL15", new TextDataType());
		tableDlyFlows.createColumn("FLOW16", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL16", new TextDataType());
		tableDlyFlows.createColumn("FLOW17", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL17", new TextDataType());
		tableDlyFlows.createColumn("FLOW18", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL18", new TextDataType());
		tableDlyFlows.createColumn("FLOW19", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL19", new TextDataType());
		tableDlyFlows.createColumn("FLOW20", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL20", new TextDataType());
		tableDlyFlows.createColumn("FLOW21", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL21", new TextDataType());
		tableDlyFlows.createColumn("FLOW22", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL22", new TextDataType());
		tableDlyFlows.createColumn("FLOW23", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL23", new TextDataType());
		tableDlyFlows.createColumn("FLOW24", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL24", new TextDataType());
		tableDlyFlows.createColumn("FLOW25", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL25", new TextDataType());
		tableDlyFlows.createColumn("FLOW26", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL26", new TextDataType());
		tableDlyFlows.createColumn("FLOW27", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL27", new TextDataType());
		tableDlyFlows.createColumn("FLOW28", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL28", new TextDataType());
		tableDlyFlows.createColumn("FLOW29", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL29", new TextDataType());
		tableDlyFlows.createColumn("FLOW30", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL30", new TextDataType());
		tableDlyFlows.createColumn("FLOW31", new RealDataType());
		tableDlyFlows.createColumn("FLOW_SYMBOL31", new TextDataType());
		this.createUniqueConstraint("DLY_FLOWS_PrimaryKey", tableDlyFlows, tableDlyFlows.getColumn("STATION_NUMBER"), tableDlyFlows.getColumn("YEAR"), tableDlyFlows.getColumn("MONTH"));

		Table tableDlyLevels = this.createTable("DLY_LEVELS");
		tableDlyLevels.createColumn("STATION_NUMBER", new TextDataType());
		tableDlyLevels.createColumn("YEAR", new IntDataType());
		tableDlyLevels.createColumn("MONTH", new IntDataType());
		tableDlyLevels.createColumn("PRECISION_CODE", new IntDataType());
		tableDlyLevels.createColumn("FULL_MONTH", new IntDataType());
		tableDlyLevels.createColumn("NO_DAYS", new IntDataType());
		tableDlyLevels.createColumn("MONTHLY_MEAN", new RealDataType());
		tableDlyLevels.createColumn("MONTHLY_TOTAL", new RealDataType());
		tableDlyLevels.createColumn("FIRST_DAY_MIN", new IntDataType());
		tableDlyLevels.createColumn("MIN", new RealDataType());
		tableDlyLevels.createColumn("FIRST_DAY_MAX", new IntDataType());
		tableDlyLevels.createColumn("MAX", new RealDataType());
		tableDlyLevels.createColumn("LEVEL1", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL1", new TextDataType());
		tableDlyLevels.createColumn("LEVEL2", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL2", new TextDataType());
		tableDlyLevels.createColumn("LEVEL3", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL3", new TextDataType());
		tableDlyLevels.createColumn("LEVEL4", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL4", new TextDataType());
		tableDlyLevels.createColumn("LEVEL5", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL5", new TextDataType());
		tableDlyLevels.createColumn("LEVEL6", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL6", new TextDataType());
		tableDlyLevels.createColumn("LEVEL7", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL7", new TextDataType());
		tableDlyLevels.createColumn("LEVEL8", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL8", new TextDataType());
		tableDlyLevels.createColumn("LEVEL9", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL9", new TextDataType());
		tableDlyLevels.createColumn("LEVEL10", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL10", new TextDataType());
		tableDlyLevels.createColumn("LEVEL11", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL11", new TextDataType());
		tableDlyLevels.createColumn("LEVEL12", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL12", new TextDataType());
		tableDlyLevels.createColumn("LEVEL13", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL13", new TextDataType());
		tableDlyLevels.createColumn("LEVEL14", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL14", new TextDataType());
		tableDlyLevels.createColumn("LEVEL15", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL15", new TextDataType());
		tableDlyLevels.createColumn("LEVEL16", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL16", new TextDataType());
		tableDlyLevels.createColumn("LEVEL17", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL17", new TextDataType());
		tableDlyLevels.createColumn("LEVEL18", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL18", new TextDataType());
		tableDlyLevels.createColumn("LEVEL19", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL19", new TextDataType());
		tableDlyLevels.createColumn("LEVEL20", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL20", new TextDataType());
		tableDlyLevels.createColumn("LEVEL21", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL21", new TextDataType());
		tableDlyLevels.createColumn("LEVEL22", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL22", new TextDataType());
		tableDlyLevels.createColumn("LEVEL23", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL23", new TextDataType());
		tableDlyLevels.createColumn("LEVEL24", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL24", new TextDataType());
		tableDlyLevels.createColumn("LEVEL25", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL25", new TextDataType());
		tableDlyLevels.createColumn("LEVEL26", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL26", new TextDataType());
		tableDlyLevels.createColumn("LEVEL27", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL27", new TextDataType());
		tableDlyLevels.createColumn("LEVEL28", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL28", new TextDataType());
		tableDlyLevels.createColumn("LEVEL29", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL29", new TextDataType());
		tableDlyLevels.createColumn("LEVEL30", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL30", new TextDataType());
		tableDlyLevels.createColumn("LEVEL31", new RealDataType());
		tableDlyLevels.createColumn("LEVEL_SYMBOL31", new TextDataType());
		this.createUniqueConstraint("DLY_LEVELS_PrimaryKey", tableDlyLevels, tableDlyLevels.getColumn("STATION_NUMBER"), tableDlyLevels.getColumn("YEAR"), tableDlyLevels.getColumn("MONTH"));

		Table tableMeasurementCodes = this.createTable("MEASUREMENT_CODES");
		tableMeasurementCodes.createColumn("MEASUREMENT_CODE", new TextDataType());
		tableMeasurementCodes.createColumn("MEASUREMENT_EN", new TextDataType());
		tableMeasurementCodes.createColumn("MEASUREMENT_FR", new TextDataType());
		this.createUniqueConstraint("MEASUREMENT_CODES_PrimaryKey", tableMeasurementCodes, tableMeasurementCodes.getColumn("MEASUREMENT_CODE"));

		Table tableOperationCodes = this.createTable("OPERATION_CODES");
		tableOperationCodes.createColumn("OPERATION_CODE", new TextDataType());
		tableOperationCodes.createColumn("OPERATION_EN", new TextDataType());
		tableOperationCodes.createColumn("OPERATION_FR", new TextDataType());
		this.createUniqueConstraint("OPERATION_CODES_PrimaryKey", tableOperationCodes, tableOperationCodes.getColumn("OPERATION_CODE"));

		Table tablePeakCodes = this.createTable("PEAK_CODES");
		tablePeakCodes.createColumn("PEAK_CODE", new TextDataType());
		tablePeakCodes.createColumn("PEAK_EN", new TextDataType());
		tablePeakCodes.createColumn("PEAK_FR", new TextDataType());
		this.createUniqueConstraint("PEAK_CODES_PrimaryKey", tablePeakCodes, tablePeakCodes.getColumn("PEAK_CODE"));

		Table tablePrecisionCodes = this.createTable("PRECISION_CODES");
		tablePrecisionCodes.createColumn("PRECISION_CODE", new IntDataType());
		tablePrecisionCodes.createColumn("PRECISION_EN", new TextDataType());
		tablePrecisionCodes.createColumn("PRECISION_FR", new TextDataType());
		this.createUniqueConstraint("PRECISION_CODES_PrimaryKey", tablePrecisionCodes, tablePrecisionCodes.getColumn("PRECISION_CODE"));

		Table tableRegionalOfficeList = this.createTable("REGIONAL_OFFICE_LIST");
		tableRegionalOfficeList.createColumn("REGIONAL_OFFICE_ID", new IntDataType());
		tableRegionalOfficeList.createColumn("REGIONAL_OFFICE_NAME_EN", new TextDataType());
		tableRegionalOfficeList.createColumn("REGIONAL_OFFICE_NAME_FR", new TextDataType());
		this.createUniqueConstraint("REGIONAL_OFFICE_LIST_PrimaryKey", tableRegionalOfficeList, tableRegionalOfficeList.getColumn("REGIONAL_OFFICE_ID"));

		Table tableSampleRemarkCodes = this.createTable("SAMPLE_REMARK_CODES");
		tableSampleRemarkCodes.createColumn("SAMPLE_REMARK_CODE", new IntDataType());
		tableSampleRemarkCodes.createColumn("SAMPLE_REMARK_EN", new TextDataType());
		tableSampleRemarkCodes.createColumn("SAMPLE_REMARK_FR", new TextDataType());
		this.createUniqueConstraint("SAMPLE_REMARK_CODES_PrimaryKey", tableSampleRemarkCodes, tableSampleRemarkCodes.getColumn("SAMPLE_REMARK_CODE"));

		Table tableSedDataTypes = this.createTable("SED_DATA_TYPES");
		tableSedDataTypes.createColumn("SED_DATA_TYPE", new TextDataType());
		tableSedDataTypes.createColumn("SED_DATA_TYPE_EN", new TextDataType());
		tableSedDataTypes.createColumn("SED_DATA_TYPE_FR", new TextDataType());
		this.createUniqueConstraint("SED_DATA_TYPES_PrimaryKey", tableSedDataTypes, tableSedDataTypes.getColumn("SED_DATA_TYPE"));

		Table tableSedDlyLoads = this.createTable("SED_DLY_LOADS");
		tableSedDlyLoads.createColumn("STATION_NUMBER", new TextDataType());
		tableSedDlyLoads.createColumn("YEAR", new IntDataType());
		tableSedDlyLoads.createColumn("MONTH", new IntDataType());
		tableSedDlyLoads.createColumn("FULL_MONTH", new IntDataType());
		tableSedDlyLoads.createColumn("NO_DAYS", new IntDataType());
		tableSedDlyLoads.createColumn("MONTHLY_MEAN", new RealDataType());
		tableSedDlyLoads.createColumn("MONTHLY_TOTAL", new RealDataType());
		tableSedDlyLoads.createColumn("FIRST_DAY_MIN", new IntDataType());
		tableSedDlyLoads.createColumn("MIN", new RealDataType());
		tableSedDlyLoads.createColumn("FIRST_DAY_MAX", new IntDataType());
		tableSedDlyLoads.createColumn("MAX", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD1", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD2", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD3", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD4", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD5", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD6", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD7", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD8", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD9", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD10", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD11", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD12", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD13", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD14", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD15", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD16", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD17", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD18", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD19", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD20", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD21", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD22", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD23", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD24", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD25", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD26", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD27", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD28", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD29", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD30", new RealDataType());
		tableSedDlyLoads.createColumn("LOAD31", new RealDataType());
		this.createUniqueConstraint("SED_DLY_LOADS_PrimaryKey", tableSedDlyLoads, tableSedDlyLoads.getColumn("STATION_NUMBER"), tableSedDlyLoads.getColumn("YEAR"), tableSedDlyLoads.getColumn("MONTH"));

		Table tableSedDlySuscon = this.createTable("SED_DLY_SUSCON");
		tableSedDlySuscon.createColumn("STATION_NUMBER", new TextDataType());
		tableSedDlySuscon.createColumn("YEAR", new IntDataType());
		tableSedDlySuscon.createColumn("MONTH", new IntDataType());
		tableSedDlySuscon.createColumn("FULL_MONTH", new IntDataType());
		tableSedDlySuscon.createColumn("NO_DAYS", new IntDataType());
		tableSedDlySuscon.createColumn("MONTHLY_TOTAL", new RealDataType());
		tableSedDlySuscon.createColumn("FIRST_DAY_MIN", new IntDataType());
		tableSedDlySuscon.createColumn("MIN", new RealDataType());
		tableSedDlySuscon.createColumn("FIRST_DAY_MAX", new IntDataType());
		tableSedDlySuscon.createColumn("MAX", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON1", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL1", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON2", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL2", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON3", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL3", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON4", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL4", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON5", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL5", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON6", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL6", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON7", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL7", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON8", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL8", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON9", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL9", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON10", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL10", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON11", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL11", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON12", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL12", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON13", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL13", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON14", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL14", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON15", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL15", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON16", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL16", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON17", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL17", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON18", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL18", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON19", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL19", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON20", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL20", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON21", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL21", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON22", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL22", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON23", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL23", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON24", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL24", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON25", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL25", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON26", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL26", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON27", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL27", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON28", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL28", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON29", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL29", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON30", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL30", new TextDataType());
		tableSedDlySuscon.createColumn("SUSCON31", new RealDataType());
		tableSedDlySuscon.createColumn("SUSCON_SYMBOL31", new TextDataType());
		this.createUniqueConstraint("SED_DLY_SUSCON_PrimaryKey", tableSedDlySuscon, tableSedDlySuscon.getColumn("STATION_NUMBER"), tableSedDlySuscon.getColumn("YEAR"), tableSedDlySuscon.getColumn("MONTH"));

		Table tableSedSamples = this.createTable("SED_SAMPLES");
		tableSedSamples.createColumn("STATION_NUMBER", new TextDataType());
		tableSedSamples.createColumn("SED_DATA_TYPE", new TextDataType());
		tableSedSamples.createColumn("DATE", new DateTimeDataType());
		tableSedSamples.createColumn("SAMPLE_REMARK_CODE", new TextDataType());
		tableSedSamples.createColumn("TIME_SYMBOL", new TextDataType());
		tableSedSamples.createColumn("FLOW", new RealDataType());
		tableSedSamples.createColumn("FLOW_SYMBOL", new TextDataType());
		tableSedSamples.createColumn("SAMPLER_TYPE", new TextDataType());
		tableSedSamples.createColumn("SAMPLING_VERTICAL_LOCATION", new TextDataType());
		tableSedSamples.createColumn("SAMPLING_VERTICAL_SYMBOL", new TextDataType());
		tableSedSamples.createColumn("TEMPERATURE", new RealDataType());
		tableSedSamples.createColumn("CONCENTRATION", new RealDataType());
		tableSedSamples.createColumn("CONCENTRATION_SYMBOL", new TextDataType());
		tableSedSamples.createColumn("DISSOLVED_SOLIDS", new RealDataType());
		tableSedSamples.createColumn("SAMPLE_DEPTH", new RealDataType());
		tableSedSamples.createColumn("STREAMBED", new TextDataType());
		tableSedSamples.createColumn("SV_DEPTH1", new RealDataType());
		tableSedSamples.createColumn("SV_DEPTH2", new RealDataType());
		this.createUniqueConstraint("SED_SAMPLES_PrimaryKey", tableSedSamples, tableSedSamples.getColumn("STATION_NUMBER"), tableSedSamples.getColumn("SED_DATA_TYPE"), tableSedSamples.getColumn("DATE"));

		Table tableSedSamplesPsd = this.createTable("SED_SAMPLES_PSD");
		tableSedSamplesPsd.createColumn("STATION_NUMBER", new TextDataType());
		tableSedSamplesPsd.createColumn("SED_DATA_TYPE", new TextDataType());
		tableSedSamplesPsd.createColumn("DATE", new DateTimeDataType());
		tableSedSamplesPsd.createColumn("PARTICLE_SIZE", new RealDataType());
		tableSedSamplesPsd.createColumn("PERCENT", new IntDataType());
		this.createUniqueConstraint("SED_SAMPLES_PSD_PrimaryKey", tableSedSamplesPsd, tableSedSamplesPsd.getColumn("STATION_NUMBER"), tableSedSamplesPsd.getColumn("SED_DATA_TYPE"), tableSedSamplesPsd.getColumn("DATE"), tableSedSamplesPsd.getColumn("PARTICLE_SIZE"));

		Table tableSedVerticalLocation = this.createTable("SED_VERTICAL_LOCATION");
		tableSedVerticalLocation.createColumn("SAMPLING_VERTICAL_LOCATION_ID", new TextDataType());
		tableSedVerticalLocation.createColumn("SAMPLING_VERTICAL_LOCATION_EN", new TextDataType());
		tableSedVerticalLocation.createColumn("SAMPLING_VERTICAL_LOCATION_FR", new TextDataType());
		this.createUniqueConstraint("SED_VERTICAL_LOCATION_PrimaryKey", tableSedVerticalLocation, tableSedVerticalLocation.getColumn("SAMPLING_VERTICAL_LOCATION_ID"));

		Table tableSedVerticalSymbols = this.createTable("SED_VERTICAL_SYMBOLS");
		tableSedVerticalSymbols.createColumn("SAMPLING_VERTICAL_SYMBOL", new TextDataType());
		tableSedVerticalSymbols.createColumn("SAMPLING_VERTICAL_EN", new TextDataType());
		tableSedVerticalSymbols.createColumn("SAMPLING_VERTICAL_FR", new TextDataType());
		this.createUniqueConstraint("SED_VERTICAL_SYMBOLS_PrimaryKey", tableSedVerticalSymbols, tableSedVerticalSymbols.getColumn("SAMPLING_VERTICAL_SYMBOL"));

		Table tableStations = this.createTable("STATIONS");
		tableStations.createColumn("STATION_NUMBER", new TextDataType());
		tableStations.createColumn("STATION_NAME", new TextDataType());
		tableStations.createColumn("PROV_TERR_STATE_LOC", new TextDataType());
		tableStations.createColumn("REGIONAL_OFFICE_ID", new TextDataType());
		tableStations.createColumn("HYD_STATUS", new TextDataType());
		tableStations.createColumn("SED_STATUS", new TextDataType());
		tableStations.createColumn("LATITUDE", new RealDataType());
		tableStations.createColumn("LONGITUDE", new RealDataType());
		tableStations.createColumn("DRAINAGE_AREA_GROSS", new RealDataType());
		tableStations.createColumn("DRAINAGE_AREA_EFFECT", new RealDataType());
		tableStations.createColumn("RHBN", new IntDataType());
		tableStations.createColumn("REAL_TIME", new IntDataType());
		tableStations.createColumn("CONTRIBUTOR_ID", new IntDataType());
		tableStations.createColumn("OPERATOR_ID", new IntDataType());
		tableStations.createColumn("DATUM_ID", new IntDataType());
		this.createUniqueConstraint("STATIONS___uniqueindex", tableStations, tableStations.getColumn("STATION_NUMBER"));

		Table tableStnDataCollection = this.createTable("STN_DATA_COLLECTION");
		tableStnDataCollection.createColumn("STATION_NUMBER", new TextDataType());
		tableStnDataCollection.createColumn("DATA_TYPE", new TextDataType());
		tableStnDataCollection.createColumn("YEAR_FROM", new IntDataType());
		tableStnDataCollection.createColumn("YEAR_TO", new IntDataType());
		tableStnDataCollection.createColumn("MEASUREMENT_CODE", new TextDataType());
		tableStnDataCollection.createColumn("OPERATION_CODE", new TextDataType());
		this.createUniqueConstraint("STN_DATA_COLLECTION___uniqueindex", tableStnDataCollection, tableStnDataCollection.getColumn("STATION_NUMBER"), tableStnDataCollection.getColumn("DATA_TYPE"), tableStnDataCollection.getColumn("YEAR_FROM"));

		Table tableStnDataRange = this.createTable("STN_DATA_RANGE");
		tableStnDataRange.createColumn("STATION_NUMBER", new TextDataType());
		tableStnDataRange.createColumn("DATA_TYPE", new TextDataType());
		tableStnDataRange.createColumn("SED_DATA_TYPE", new TextDataType());
		tableStnDataRange.createColumn("YEAR_FROM", new IntDataType());
		tableStnDataRange.createColumn("YEAR_TO", new IntDataType());
		tableStnDataRange.createColumn("RECORD_LENGTH", new IntDataType());
		this.createUniqueConstraint("STN_DATA_RANGE_PrimaryKey", tableStnDataRange, tableStnDataRange.getColumn("STATION_NUMBER"), tableStnDataRange.getColumn("DATA_TYPE"), tableStnDataRange.getColumn("SED_DATA_TYPE"));

		Table tableStnDatumConversion = this.createTable("STN_DATUM_CONVERSION");
		tableStnDatumConversion.createColumn("STATION_NUMBER", new TextDataType());
		tableStnDatumConversion.createColumn("DATUM_ID_FROM", new IntDataType());
		tableStnDatumConversion.createColumn("DATUM_ID_TO", new IntDataType());
		tableStnDatumConversion.createColumn("CONVERSION_FACTOR", new RealDataType());
		this.createUniqueConstraint("STN_DATUM_CONVERSION_PrimaryKey", tableStnDatumConversion, tableStnDatumConversion.getColumn("STATION_NUMBER"), tableStnDatumConversion.getColumn("DATUM_ID_FROM"), tableStnDatumConversion.getColumn("DATUM_ID_TO"));

		Table tableStnDatumUnrelated = this.createTable("STN_DATUM_UNRELATED");
		tableStnDatumUnrelated.createColumn("STATION_NUMBER", new TextDataType());
		tableStnDatumUnrelated.createColumn("DATUM_ID", new IntDataType());
		tableStnDatumUnrelated.createColumn("YEAR_FROM", new DateTimeDataType());
		tableStnDatumUnrelated.createColumn("YEAR_TO", new DateTimeDataType());
		this.createUniqueConstraint("STN_DATUM_UNRELATED_PrimaryKey", tableStnDatumUnrelated, tableStnDatumUnrelated.getColumn("STATION_NUMBER"), tableStnDatumUnrelated.getColumn("DATUM_ID"));

		Table tableStnOperationSchedule = this.createTable("STN_OPERATION_SCHEDULE");
		tableStnOperationSchedule.createColumn("STATION_NUMBER", new TextDataType());
		tableStnOperationSchedule.createColumn("DATA_TYPE", new TextDataType());
		tableStnOperationSchedule.createColumn("YEAR", new IntDataType());
		tableStnOperationSchedule.createColumn("MONTH_FROM", new TextDataType());
		tableStnOperationSchedule.createColumn("MONTH_TO", new TextDataType());
		this.createUniqueConstraint("STN_OPERATION_SCHEDULE___uniqueindex", tableStnOperationSchedule, tableStnOperationSchedule.getColumn("STATION_NUMBER"), tableStnOperationSchedule.getColumn("DATA_TYPE"), tableStnOperationSchedule.getColumn("YEAR"));

		Table tableStnRegulation = this.createTable("STN_REGULATION");
		tableStnRegulation.createColumn("STATION_NUMBER", new TextDataType());
		tableStnRegulation.createColumn("YEAR_FROM", new IntDataType());
		tableStnRegulation.createColumn("YEAR_TO", new IntDataType());
		tableStnRegulation.createColumn("REGULATED", new IntDataType());
		this.createUniqueConstraint("STN_REGULATION_PrimaryKey", tableStnRegulation, tableStnRegulation.getColumn("STATION_NUMBER"));

		Table tableStnRemarks = this.createTable("STN_REMARKS");
		tableStnRemarks.createColumn("STATION_NUMBER", new TextDataType());
		tableStnRemarks.createColumn("REMARK_TYPE_CODE", new IntDataType());
		tableStnRemarks.createColumn("YEAR", new IntDataType());
		tableStnRemarks.createColumn("REMARK_EN", new TextDataType());
		tableStnRemarks.createColumn("REMARK_FR", new TextDataType());
		this.createUniqueConstraint("STN_REMARKS___uniqueindex", tableStnRemarks, tableStnRemarks.getColumn("STATION_NUMBER"), tableStnRemarks.getColumn("REMARK_TYPE_CODE"), tableStnRemarks.getColumn("YEAR"));

		Table tableStnRemarkCodes = this.createTable("STN_REMARK_CODES");
		tableStnRemarkCodes.createColumn("REMARK_TYPE_CODE", new IntDataType());
		tableStnRemarkCodes.createColumn("REMARK_TYPE_EN", new TextDataType());
		tableStnRemarkCodes.createColumn("REMARK_TYPE_FR", new TextDataType());
		this.createUniqueConstraint("STN_REMARK_CODES_PrimaryKey", tableStnRemarkCodes, tableStnRemarkCodes.getColumn("REMARK_TYPE_CODE"));

		Table tableStnStatusCodes = this.createTable("STN_STATUS_CODES");
		tableStnStatusCodes.createColumn("STATUS_CODE", new TextDataType());
		tableStnStatusCodes.createColumn("STATUS_EN", new TextDataType());
		tableStnStatusCodes.createColumn("STATUS_FR", new TextDataType());
		this.createUniqueConstraint("STN_STATUS_CODES_PrimaryKey", tableStnStatusCodes, tableStnStatusCodes.getColumn("STATUS_CODE"));

		Table tableVersion = this.createTable("VERSION");
		tableVersion.createColumn("Version", new TextDataType());
		tableVersion.createColumn("Date", new DateTimeDataType());
	}
}

